<Window x:Class="PW9.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PW9"
        mc:Ignorable="d"
        Title="PW9" MinHeight="430" MinWidth="800" ResizeMode="CanResize" Icon="OneDrive.ico" Height="424" Width="673">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="LightCyan"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#33000000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Windows11" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="Windows11ForTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Windows11ForTable" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFA5E7FF" Offset="0"/>
                <GradientStop Color="#FFC500FF" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Menu VerticalAlignment="Top" Focusable="False">
            <MenuItem Header="Действия" Focusable="False">
                <MenuItem Header="Добавить" Click="AddCountry_Click"/>
                <MenuItem Header="Удалить" Click="DeleteCountry_Click"/>
                <MenuItem Header="Подсчитать" Click="Calculate_Click"/>
            </MenuItem>
            <MenuItem Header="Справка" Click="Support_Click" Focusable="False"/>
            <MenuItem Header="О программе" Click="AboutProgram_Click" Focusable="False"/>
            <MenuItem Header="Выход" Click="Exit_Click" Focusable="False"/>
        </Menu>
        <DataGrid x:Name="Table" MinHeight="346"  MinWidth="433" CanUserAddRows="False" IsReadOnly="True" Margin="10,23,340,30" Background="#7FF0F0F0" Style="{DynamicResource Windows11ForTable}" Focusable="False"/>
        <GroupBox Header="Панель управления странами" HorizontalAlignment="Right" Height="284" Margin="0,23,10,0" VerticalAlignment="Top" Width="287" Background="#66FFFFFF">
            <GroupBox.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA5E7FF" Offset="0"/>
                    <GradientStop Color="#FFC500FF" Offset="1"/>
                </LinearGradientBrush>
            </GroupBox.BorderBrush>
            <Grid>
                <Button x:Name="AddCountry" Content="Добавить" HorizontalAlignment="Left" Margin="10,134,0,0" VerticalAlignment="Top" Width="113" Height="23" Style="{DynamicResource Windows11}" Click="AddCountry_Click" Focusable="False"/>
                <Label Content="Наименование:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                <TextBox x:Name="CountryName" HorizontalAlignment="Left" Height="23" Margin="129,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Style="{DynamicResource Windows11ForTextBox}" MaxLength="19" VerticalContentAlignment="Center" GotFocus="CountryName_GotFocus"/>
                <Label Content="Народонаселение:" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top"/>
                <TextBox x:Name="People" HorizontalAlignment="Left" Height="23" Margin="129,41,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Style="{DynamicResource Windows11ForTextBox}" MaxLength="12" VerticalContentAlignment="Center" GotFocus="CountryName_GotFocus"/>
                <Label Content="Столица:" HorizontalAlignment="Left" Margin="10,72,0,0" VerticalAlignment="Top"/>
                <TextBox x:Name="MainTown" HorizontalAlignment="Left" Height="23" Margin="129,72,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Style="{DynamicResource Windows11ForTextBox}" MaxLength="19" VerticalContentAlignment="Center" GotFocus="CountryName_GotFocus"/>
                <Label Content="Денежная единица:" HorizontalAlignment="Left" Margin="10,103,0,0" VerticalAlignment="Top"/>
                <TextBox x:Name="Money" HorizontalAlignment="Left" Height="23" Margin="129,103,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Style="{DynamicResource Windows11ForTextBox}" MaxLength="19" VerticalContentAlignment="Center" GotFocus="CountryName_GotFocus"/>
                <Button x:Name="DeleteCountry" Content="Удалить" HorizontalAlignment="Left" Margin="152,134,0,0" VerticalAlignment="Top" Width="113" Height="23" Style="{DynamicResource Windows11}" Click="DeleteCountry_Click" ToolTip="Выполняет удаление страны с указанным именем"/>
                <GroupBox Header="Подсчет общего населения" HorizontalAlignment="Left" Height="98" Margin="0,162,0,0" VerticalAlignment="Top" Width="275" BorderBrush="Black" Background="#4C727272">
                    <Grid>
                        <Label Content="Общее население:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="AllPeople" HorizontalAlignment="Left" Height="23" Margin="122,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="131" IsReadOnly="True" Style="{DynamicResource Windows11ForTextBox}" VerticalContentAlignment="Center" Focusable="False"/>
                        <Button x:Name="Calculate" Content="Подсчитать" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Width="243" Style="{DynamicResource Windows11}" Click="Calculate_Click" IsEnabled="False"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </GroupBox>
        <GroupBox Header="Стандартные возможности" HorizontalAlignment="Right" Height="62" Margin="0,307,10,0" VerticalAlignment="Top" Width="287" Background="#33000000" BorderBrush="Red">
            <Grid>
                <Button x:Name="Support" Content="Справка" HorizontalAlignment="Left" Margin="10,9,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource Windows11}" Click="Support_Click">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDA8AFF" Offset="0.008"/>
                            <GradientStop Color="#FFC64BFF" Offset="1"/>
                            <GradientStop Color="#66D477FF" Offset="0.502"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="AboutProgram" Content="О программе" HorizontalAlignment="Left" Margin="90,9,0,0" VerticalAlignment="Top" Width="95" Style="{DynamicResource Windows11}" Click="AboutProgram_Click">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDA8AFF" Offset="0.008"/>
                            <GradientStop Color="#FFC64BFF" Offset="1"/>
                            <GradientStop Color="#66D477FF" Offset="0.502"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="Exit" Content="Выход" HorizontalAlignment="Left" Margin="190,9,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource Windows11}" Click="Exit_Click" IsCancel="True">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDA8AFF" Offset="0.008"/>
                            <GradientStop Color="#FFC64BFF" Offset="1"/>
                            <GradientStop Color="#66D477FF" Offset="0.502"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>

            </Grid>
        </GroupBox>
    </Grid>
</Window>
